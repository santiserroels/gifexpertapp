{"version":3,"sources":["Components/AddCategory.js","Helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","catg","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAETC,mBAAS,IAFA,mBAErCC,EAFqC,KAE1BC,EAF0B,KAmB5C,OACI,sBAAMC,SAZW,SAACC,GAElBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,MAMlB,SACI,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAjBrB,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,QAgBgDG,YAAY,4B,+BCpB9EC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCFPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OACI,sBAAKc,UAAU,uDAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EAEZf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAoBtC,OAbAC,qBAAW,WAEPxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAIvB,CAACpB,IAGIqB,EDjBuBK,CAAa1B,GAA/Ba,EAFuB,EAE5BN,KAAYa,EAFgB,EAEhBA,QAGnB,OACI,qCACA,oBAAIJ,UAAU,oDAAd,SAAmEhB,IAElEoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAEWH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEfnBgB,EAAe,WAAO,IAAD,EAEK1C,mBAAS,CAAC,cAFf,mBAExB2C,EAFwB,KAEZ5C,EAFY,KAK9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ4C,EAAWnB,KAAK,SAAAT,GAAQ,OACxB,cAAC,EAAD,CAEIA,SAAUA,GADLA,YCT7B6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2c3d8372.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue,setInputValue] = useState('');\r\n\r\n    const handleInputChange =(e) =>{\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) =>{\r\n\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ){           \r\n            setCategories( catg => [inputValue,...catg] );\r\n            setInputValue('');\r\n        };\r\n    };\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" value={inputValue} onChange={handleInputChange} placeholder=\"Ingrese Categoria...\"></input>\r\n        </form>\r\n    );\r\n};\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n};","\r\n\r\n\r\n\r\nexport const getGifs = async(category) =>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=iB4SKL9FRQTiHnKOo6NKSKnPBfRRQ3tZ`;\r\n\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        };\r\n    });\r\n\r\n    return gifs;\r\n\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn animate__slow\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images,loading} = useFetchGifs(category);\r\n\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn animate__slower\">{category}</h3>\r\n\r\n        {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n\r\n        <div className=\"card-grid\">\r\n               {\r\n                   images.map( img => (\r\n                       <GifGridItem \r\n                       key={img.id}\r\n                       {...img}\r\n                       />\r\n                    ) )\r\n               }    \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../Helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false,\r\n                });\r\n            });\r\n\r\n    },[category])\r\n\r\n\r\n    return state;\r\n\r\n};","import React, { useState } from 'react'\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport { GifGrid } from './Components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n   const [categories, setCategories] = useState(['One Punch']);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category =>\r\n                    <GifGrid\r\n                        key={category}\r\n                        category={category}\r\n                    />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport { GifExpertApp } from './GifExpertApp';\n\n\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}